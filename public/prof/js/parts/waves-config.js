const waveConfig={yDifferences:{type1:window.matchMedia(mqs[2]).matches?[{index:10,difference:-18,waveIndex:0},{index:9,difference:-12,waveIndex:0},{index:8,difference:-12,waveIndex:0},{index:7,difference:-6,waveIndex:0},{index:10,difference:-18,waveIndex:1},{index:9,difference:-12,waveIndex:1},{index:8,difference:-12,waveIndex:1},{index:7,difference:-6,waveIndex:1},{index:10,difference:-18,waveIndex:2},{index:9,difference:-12,waveIndex:2},{index:8,difference:-12,waveIndex:2},{index:7,difference:-6,waveIndex:2},{index:10,difference:-18,waveIndex:3},{index:9,difference:-12,waveIndex:3},{index:8,difference:-12,waveIndex:3},{index:7,difference:-6,waveIndex:3},{index:10,difference:-18,waveIndex:4},{index:9,difference:-12,waveIndex:4},{index:8,difference:-12,waveIndex:4},{index:7,difference:-6,waveIndex:4},{index:10,difference:-18,waveIndex:5},{index:9,difference:-12,waveIndex:5},{index:8,difference:-12,waveIndex:5},{index:7,difference:-6,waveIndex:5},]:[{index:6,difference:-10,waveIndex:0},{index:6,difference:-10,waveIndex:1},{index:6,difference:-10,waveIndex:2},{index:6,difference:-10,waveIndex:3},{index:6,difference:-10,waveIndex:4},{index:6,difference:-10,waveIndex:5},],type2:window.matchMedia(mqs[2]).matches?[{index:11,difference:-15,waveIndex:0},{index:1,difference:-15,waveIndex:0},{index:10,difference:-10,waveIndex:0},{index:2,difference:-10,waveIndex:0},{index:9,difference:-8,waveIndex:0},{index:3,difference:-10,waveIndex:0},{index:8,difference:-10,waveIndex:0},{index:4,difference:-10,waveIndex:0},{index:7,difference:-10,waveIndex:0},{index:5,difference:-10,waveIndex:0},{index:11,difference:-15,waveIndex:1},{index:1,difference:-15,waveIndex:1},{index:10,difference:-10,waveIndex:1},{index:2,difference:-10,waveIndex:1},{index:9,difference:-8,waveIndex:1},{index:3,difference:-10,waveIndex:1},{index:8,difference:-10,waveIndex:1},{index:4,difference:-10,waveIndex:1},{index:7,difference:-10,waveIndex:1},{index:5,difference:-10,waveIndex:1},{index:11,difference:-15,waveIndex:2},{index:1,difference:-15,waveIndex:2},{index:10,difference:-10,waveIndex:2},{index:2,difference:-10,waveIndex:2},{index:9,difference:-8,waveIndex:2},{index:3,difference:-10,waveIndex:2},{index:8,difference:-10,waveIndex:2},{index:4,difference:-10,waveIndex:2},{index:7,difference:-10,waveIndex:2},{index:5,difference:-10,waveIndex:2},{index:11,difference:-15,waveIndex:3},{index:1,difference:-15,waveIndex:3},{index:10,difference:-10,waveIndex:3},{index:2,difference:-10,waveIndex:3},{index:9,difference:-8,waveIndex:3},{index:3,difference:-10,waveIndex:3},{index:8,difference:-10,waveIndex:3},{index:4,difference:-10,waveIndex:3},{index:7,difference:-10,waveIndex:3},{index:5,difference:-10,waveIndex:3},{index:11,difference:-15,waveIndex:4},{index:1,difference:-15,waveIndex:4},{index:10,difference:-10,waveIndex:4},{index:2,difference:-10,waveIndex:4},{index:9,difference:-8,waveIndex:4},{index:3,difference:-10,waveIndex:4},{index:8,difference:-10,waveIndex:4},{index:4,difference:-10,waveIndex:4},{index:7,difference:-10,waveIndex:4},{index:5,difference:-10,waveIndex:4},{index:11,difference:-15,waveIndex:5},{index:1,difference:-15,waveIndex:5},{index:10,difference:-10,waveIndex:5},{index:2,difference:-10,waveIndex:5},{index:9,difference:-8,waveIndex:5},{index:3,difference:-10,waveIndex:5},{index:8,difference:-10,waveIndex:5},{index:4,difference:-10,waveIndex:5},{index:7,difference:-10,waveIndex:5},{index:5,difference:-10,waveIndex:5},]:[],type3:window.matchMedia(mqs[2]).matches?[{index:4,difference:-5,waveIndex:0},{index:3,difference:-5,waveIndex:0},{index:2,difference:-9,waveIndex:0},{index:1,difference:-9,waveIndex:0},{index:4,difference:-5,waveIndex:1},{index:3,difference:-5,waveIndex:1},{index:2,difference:-9,waveIndex:1},{index:1,difference:-9,waveIndex:1},{index:4,difference:-5,waveIndex:2},{index:3,difference:-5,waveIndex:2},{index:2,difference:-9,waveIndex:2},{index:1,difference:-9,waveIndex:2},{index:4,difference:-5,waveIndex:3},{index:3,difference:-5,waveIndex:3},{index:2,difference:-9,waveIndex:3},{index:1,difference:-9,waveIndex:3},{index:4,difference:-5,waveIndex:4},{index:3,difference:-5,waveIndex:4},{index:2,difference:-9,waveIndex:4},{index:1,difference:-9,waveIndex:4},{index:4,difference:-5,waveIndex:5},{index:3,difference:-5,waveIndex:5},{index:2,difference:-9,waveIndex:5},{index:1,difference:-9,waveIndex:5},]:[],},base_points:{type1:window.matchMedia(mqs[2]).matches?[{x:-5,y:100,fixed:!0},{x:-5,y:65,fixed:!0},{x:8,y:80,fixed:!1},{x:22,y:70,fixed:!1},{x:33,y:85,fixed:!1},{x:44,y:60,fixed:!1},{x:55,y:70,fixed:!1},{x:66,y:50,fixed:!1},{x:77,y:55,fixed:!1},{x:89,y:50,fixed:!1},{x:105,y:15,fixed:!1},{x:105,y:100,fixed:!0},]:[{x:-5,y:100,fixed:!0},{x:-5,y:75,fixed:!1},{x:30,y:35,fixed:!1},{x:65,y:60,fixed:!1},{x:90,y:42,fixed:!1},{x:105,y:15,fixed:!1},{x:105,y:100,fixed:!0},],type2:window.matchMedia(mqs[2]).matches?[{x:-2,y:100,fixed:!0},{x:-2,y:30,fixed:!1},{x:10,y:45,fixed:!1},{x:20,y:40,fixed:!1},{x:30,y:70,fixed:!1},{x:39,y:65,fixed:!1},{x:50,y:80,fixed:!0},{x:61,y:65,fixed:!1},{x:70,y:70,fixed:!1},{x:80,y:40,fixed:!1},{x:90,y:45,fixed:!1},{x:102,y:30,fixed:!1},{x:102,y:100,fixed:!0},]:[{x:-2,y:100,fixed:!0},{x:-2,y:30,fixed:!1},{x:15,y:65,fixed:!1},{x:35,y:70,fixed:!1},{x:50,y:80,fixed:!0},{x:65,y:70,fixed:!1},{x:85,y:65,fixed:!1},{x:102,y:30,fixed:!1},{x:102,y:100,fixed:!0},],type3:window.matchMedia(mqs[2]).matches?[{x:-2,y:100,fixed:!0},{x:-2,y:40,fixed:!1},{x:11,y:85,fixed:!1},{x:22,y:65,fixed:!1},{x:33,y:75,fixed:!1},{x:44,y:60,fixed:!1},{x:55,y:75,fixed:!1},{x:66,y:50,fixed:!1},{x:77,y:60,fixed:!1},{x:89,y:60,fixed:!1},{x:102,y:30,fixed:!1},{x:102,y:100,fixed:!0},]:[{x:-5,y:100,fixed:!0},{x:-5,y:20,fixed:!1},{x:10,y:42,fixed:!1},{x:35,y:60,fixed:!1},{x:65,y:45,fixed:!1},{x:102,y:75,fixed:!1},{x:102,y:100,fixed:!0},],type4:[{x:-2,y:100,fixed:!0},{x:-2,y:50,fixed:!1},{x:11,y:80,fixed:!1},{x:22,y:70,fixed:!1},{x:33,y:75,fixed:!1},{x:44,y:60,fixed:!1},{x:55,y:70,fixed:!1},{x:66,y:50,fixed:!1},{x:77,y:60,fixed:!1},{x:89,y:50,fixed:!1},{x:102,y:70,fixed:!1},{x:102,y:100,fixed:!0},],type5:[{x:-2,y:100,fixed:!0},{x:-2,y:60,fixed:!1},{x:6,y:85,fixed:!1},{x:15,y:75,fixed:!1},{x:22,y:80,fixed:!1},{x:30,y:65,fixed:!1},{x:39,y:70,fixed:!1},{x:50,y:55,fixed:!1},{x:61,y:70,fixed:!1},{x:70,y:65,fixed:!1},{x:78,y:80,fixed:!1},{x:85,y:75,fixed:!1},{x:94,y:85,fixed:!1},{x:102,y:60,fixed:!1},{x:102,y:100,fixed:!0},],},fill_styles:{type1:["#1900ff38","#1900ff36","#1900ff38","#1900ff36","#1900ff38","#1900ff36",],type2:[[waveColor1,waveColor2],[waveColor3,waveColor1],[waveColor2,waveColor1],[waveColor2,waveColor3],[waveColor1,waveColor3],[waveColor3,waveColor2],],type3:[[waveColor3,waveColor2],[waveColor2,waveColor3],[waveColor1,waveColor3],[waveColor3,waveColor1],[waveColor2,waveColor1],[waveColor1,waveColor2],],type4:[[waveColor1,waveColor2],[waveColor3,waveColor1],[waveColor2,waveColor1],[waveColor2,waveColor3],[waveColor1,waveColor3],[waveColor3,waveColor2],],type5:[[waveColor1,waveColor2],[waveColor3,waveColor1],[waveColor2,waveColor1],[waveColor2,waveColor3],[waveColor1,waveColor3],[waveColor3,waveColor2],],type6:["#0f0099","#050033","#1900ff1c","#1900ff","#0f0099","#050033"],type7:["#0f0099","#050033","#1900ff1c","#1900ff","#0f0099","#050033"],},gradient_config:{type1:{stops:[["color",0],["#1900ffb3",0.2],["#cd6c5880",0.5],["#E7E6F1b3",0.8],["#050033",1],],radial:!0,origin:{x:0.5,y:0.5},destination:{x:1,y:0},},type2:{stops:window.matchMedia(mqs[2]).matches?[["rgb(255,255,255,.0)",0],[waveColor2,0.1],[waveColor1,0.3],[waveColor3,0.7],["rgb(255,255,255,.0)",1],]:[[waveColor2,0],[waveColor3,0.5],[waveColor1,1],],radial:!0,origin:{x:0.5,y:0.5},destination:{x:1,y:0},},type3:{stops:window.matchMedia(mqs[2]).matches?[["rgb(255,255,255,.0)",0],[waveColor1,0.1],[waveColor2,0.3],[waveColor3,0.5],["rgb(255,255,255,.0)",1],]:[[waveColor1,0],[waveColor2,0.7],[waveColor3,1],],radial:!1,origin:{x:0,y:0},destination:{x:1,y:0},},type4:{stops:window.matchMedia(mqs[2]).matches?[["rgb(255,255,255,.0)",0],[waveColor1,0.07],["color",0.3],["color2",0.5],[waveColor3,0.9],["rgb(255,255,255,.0)",1],]:[[waveColor1,0],["color",0.3],["color2",0.5],[waveColor2,1],],origin:{x:1,y:0},destination:{x:0,y:0},},type5:{stops:window.matchMedia(mqs[2]).matches?[["rgb(255,255,255,.09)",0],[waveColor1,0.1],["color",0.2],["color2",0.4],[waveColor3,0.5],["rgb(255,255,255,.09)",1],]:[[waveColor1,0],[waveColor2,1],],origin:{x:0,y:0},destination:{x:1,y:0},},type6:{stops:[["#1900ff",0],["#cd6c5838",0.25],["#1900ff00",0.5],["#cd6c5838",0.75],["#1900ff",1],],origin:{x:0,y:1},destination:{x:0,y:0},},type7:{stops:[["#cd6c58a3",0],["#1900ff",0.5],["#cd6c58a3",1],],origin:{x:0,y:1},destination:{x:0,y:0},},},};document.querySelectorAll(".wbswave").forEach(function(canvas){let isMid=!1;let isRev=!1;var waveType=canvas.getAttribute("data-wave")||"type4";var styleType=canvas.getAttribute("data-style")||"type5";var backgroundColor=canvas.getAttribute("data-bg");var YDiff=waveConfig.yDifferences[waveType];var basePoints=waveConfig.base_points[waveType];var fillStyles=[...waveConfig.fill_styles[styleType]];var gradientConfig=waveConfig.gradient_config[styleType]||waveConfig.gradient_config.type5;fillStyles.push(backgroundColor);if(waveType==="type2"||waveType==="type5"){isMid=!0}
if(waveType==="type3"||waveType==="type4"){isRev=!0}
let timeOffset=0;setupWaveAnimation({canvasId:canvas.id,scope:paper,basePoints:basePoints,enhancedYDifferences:YDiff,waveSettings:{numberOfWaves:7,xDifferences:[0,0,0,0,0,0,0,0,0],yDifferences:[0,0,0,0,0,0,0,0,0,0],frequencies:[1.3,1.4,1.1,1.5,1.2,1.0,1.6],amplitudes:[22,21,18,17.5,18,20.5,19,18,14.5,13],speeds:window.matchMedia(mqs[2]).matches?[0.8,0.8,0.8,0.8,0.8,0.8,0.8]:[0.8,0.8,0.8,0.8,0.8,0.8,0.8],fillStyles:fillStyles,},gradientConfig:gradientConfig,animateWaves:function(event,wavePaths,basePoints,scope,waveSettings){wavePaths.forEach((wave,index)=>{let{path,frequency,amplitude,speed,originalY}=wave;window.matchMedia(mqs[2]).matches?amplitude:(amplitude=amplitude-2);path.segments.forEach((segment,segmentIndex)=>{if(!basePoints[segmentIndex].fixed){if(segmentIndex<Math.ceil(basePoints.length/2-1)&&isMid){segmentIndex=basePoints.length-segmentIndex-1}
const originalY=wave.originalY[segmentIndex];if(isRev){segmentIndex=basePoints.length-segmentIndex}
const yOffset=Math.sin(event.time*speed+basePoints.length-segmentIndex*frequency)*amplitude;segment.point.y=originalY-yOffset}});wave.path.smooth({type:"continuous"})})},callback:()=>{},})})